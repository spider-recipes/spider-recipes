name: Deploy app on port 80

on:
  pull_request:
    branches:
      - main
  # push:
  #   branches:
  #     - main
    # paths:
    #   - 'app/**'
    #   - '.github/workflows/deploy-app.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        role-session-name: deploy-backend-session
        aws-region: ${{secrets.AWS_REGION}}

    - name: Generate .env
      run: |
          cd app
          echo "PORT_LOCAL=80" > .env
          echo "DB_CONNECTION_STRING_NO_PORT=${{ secrets.DB_CONNECTION_STRING}}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME}}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD}}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME}}" >> .env
          echo "IMAGE_BUCKET_NAME=${{ secrets.IMAGE_BUCKET_NAME}}" >> .env
          echo "DB_ENDPOINT=${{ secrets.DB_ENDPOINT}}" >> .env

    - name: list files
      run: |
          cd app
          ls -la
          cat .env

    - name: Package artifact
      run: zip -r ./app.zip .env .dockerignore *
      working-directory: app

    - name: list files
      run: |
          cd app
          cd app.zip
          ls -la

    - name: Upload artifact to S3
      run: |
        cd app
        aws s3 cp app.zip s3://${{ secrets.BUCKET_NAME }}/backend/application-${{ github.run_id }}.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: deploy-server-session
          aws-region: ${{secrets.AWS_REGION}}

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version --application-name ${{ secrets.WEB_APP_NAME }} --version-label ${{ github.run_id }} --source-bundle S3Bucket="${{ secrets.BUCKET_NAME }}",S3Key="backend/application-${{ github.run_id }}.zip"
          aws elasticbeanstalk update-environment --application-name ${{ secrets.WEB_APP_NAME }} --environment-name ${{ secrets.WEB_ENV_NAME }} --version-label ${{ github.run_id }}
